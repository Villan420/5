import numpy as np

import pandas as pd

import matplotlib.pyplot as plt

import seaborn as sns

from sklearn.model_selection import train_test_split

from sklearn.neighbors import KNeighborsClassifier

from sklearn.metrics import accuracy_score

values=np.random.rand(100)

print("\nValues:")

print(values)

labels=[]

for i in values[:50]:

if i<=0.5:

labels.append('Class1')

else:

labels.append('Class2')

labels+=[None]*50

print("\nlabels:")

print(labels)

data={

"Point":[f"x{i+1}" for i in range(100)],

"Value":values,

"Label":labels

}

print("\n Data Frame:")

df=pd.DataFrame(data)

print(df)

num_col=df.select_dtypes(include=['int','float']).columns

for col in num_col:

df[col].hist(figsize=(12,8),bins=10,edgecolor='black')

plt.title(f"Histogram for {col}",fontsize=16)

plt.xlabel(col)

plt.ylabel("Frequency")

plt.show()

labeled_df=df[df["Label"].notna()]
X_train=labeled_df[["Value"]]

Y_train=labeled_df["Label"]

unlabeled_df=df[df["Label"].isna()].copy()

X_test=unlabeled_df[["Value"]]

true_labels=["Class1" if x<=0.5 else "Class2" for x in values[50:]]

k_values=[1,2,3,4,5,20,30]

results={}

accuracies={}

for k in k_values:

knn=KNeighborsClassifier(n_neighbors=k)

knn.fit(X_train,Y_train)

predictions=knn.predict(X_test)

results[k]=predictions

accuracy=accuracy_score(true_labels,predictions)

accuracies[k]=accuracy

print(f"Accuracy for k={k}:{accuracy:2f}%")

unlabeled_df[f"Label_k{k}"]=predictions

df1=unlabeled_df.drop(columns=['Label'],axis=1)

print("\n Dataframe with 'Label':")

print(df1)
